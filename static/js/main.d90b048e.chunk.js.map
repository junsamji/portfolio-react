{"version":3,"sources":["pages/NotFound.js","App.js","components/Body.js","pages/Home.js","components/Map.js","pages/About.js","components/Covid.js","pages/Sub.js","index.js"],"names":["NotFound","App","useState","text","basename","className","animationIn","animationOUt","isVisible","to","exact","path","component","Home","About","Sub","Body","animationInDuration","React","Component","NaverMapAPI","navermaps","window","naver","maps","mapDivId","style","width","height","defaultCenter","lat","lng","defaultZoom","position","LatLng","animation","onClick","alert","Map","ncpClientId","error","loading","id","Covid","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","console","log","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","option","legend","display","state","country","handleClick","setTimeout","showMessage","value","this","onChange","e","setState","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d90b048e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NotFound(){\r\n    return (\r\n        <div>\r\n            <h1>Not Found</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport {Animated} from 'react-animated-css';\r\nimport './App.css';\r\n/*import Header from './Header';*/\r\nimport { Home, About, Sub } from './';\r\nimport NotFound from './pages/NotFound';\r\n\r\nfunction App() {\r\n  const [text, setText] = useState(\"Portfolio\");\r\n\r\n  return (\r\n    <div>\r\n      <Router basename=\"/portfolio-react\">\r\n        {/*<Header />*/}\r\n      <div className=\"sticky\">\r\n        <Animated animationIn=\"bounceInLeft\" animationOUt=\"fadeOut\" isVisible={true}>\r\n          <div>\r\n              <span className=\"App-header\">\r\n                  <span className=\"App-content\">{text}</span>                    \r\n                  {/*<span className='App-menu'><img src={menu} alt=\"menu\" /></span>*/}\r\n              </span>\r\n          </div>\r\n        </Animated>\r\n\r\n        <Animated animationIn=\"bounceInRight\" animationOUt=\"fadeOut\" isVisible={true}>\r\n          <div className=\"sticky\">\r\n            <span className='App-header'>\r\n                <span className='App-content'>\r\n                  <Link to=\"/\">Home</Link>\r\n                </span>\r\n                \r\n                <span className='App-content'>\r\n                  <Link to=\"/about\">Map</Link>\r\n                </span>\r\n              \r\n                <span className='App-content'>\r\n                  <Link to=\"/sub\">Corona</Link>\r\n                </span>\r\n            </span>   \r\n          </div>\r\n        </Animated>\r\n      </div>\r\n\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/' component={Home}/>\r\n          <Route path='/about' component={About}/>\r\n          <Route path='/sub' component={Sub}/>  \r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n      </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {AnimatedOnScroll} from \"react-animated-css-onscroll\";\r\nimport './Body.css'\r\n\r\nfunction Body() {\r\n    return (\r\n        <div>\r\n            <AnimatedOnScroll animationIn=\"headShake\" animationInDuration={600}>\r\n                <div className=\"homediv\">\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                </div>\r\n                </AnimatedOnScroll>\r\n                <div className=\"homediv\">\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                </div>\r\n                <div className=\"homediv\">\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                    <h1> Home </h1>\r\n                </div>\r\n                <div className=\"homediv\">\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                    <h2>test</h2>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Body;","import React from 'react';\r\nimport Body from '../components/Body';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>test</h1>\r\n                <Body />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { RenderAfterNavermapsLoaded, NaverMap, Marker } from 'react-naver-maps';\r\nimport './components.css'\r\n\r\nfunction NaverMapAPI(){\r\n    const navermaps = window.naver.maps;\r\n    \r\n    return(\r\n      <div className=\"Map-content\">\r\n      <NaverMap\r\n        mapDivId={'maps-getting-started-uncontrolled'} //default: react-naver-map\r\n        style={{\r\n          width: '80%',\r\n          height: '60vh'\r\n        }}\r\n        defaultCenter={{ lat: 37.40042, lng: 127.11216 }} //초기 위치\r\n        defaultZoom={17} //초기 확대 배율\r\n      >\r\n      <Marker\r\n          key={1}\r\n          position={new navermaps.LatLng(37.40042,127.11241)}\r\n          animation={2}\r\n          onClick={() => {alert('이곳은 한컴 타워입니다.');}}\r\n      />\r\n      </NaverMap>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function Map() {\r\n    return (\r\n      <RenderAfterNavermapsLoaded\r\n        ncpClientId={'518ok635gd'}\r\n        error={<p>Maps Load Error</p>}\r\n        loading={<p>Maps Loading...</p>}\r\n      >\r\n        <NaverMapAPI />\r\n      </RenderAfterNavermapsLoaded>\r\n    );\r\n  }\r\n  \r\n  export default Map;","import React from 'react';\r\nimport Map from '../components/Map';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return(\r\n            <div id=\"root\">\r\n                <h1> 근무지 </h1>\r\n                <Map />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\n//비동기전송에 사용할 axios\r\nimport axios from 'axios';\r\n//사용할 챠트들을 불러오기\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\n\r\nimport './Covid.css';\r\n\r\nconst Covid = () => {\r\n    //확진자 수 관리추가\r\n    const [confirmedData, setConfirmedData] = useState({});\r\n    //격리자 관리추가\r\n    const [quarantinedData, setQuarantinedData] = useState({});\r\n    //사망,격리,관리추가\r\n    const [comparedData, setComparedData] = useState({});\r\n    useEffect(() => {\r\n\r\n        //비동기 전송\r\n        const fetchEvents =  async() => {\r\n            const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/KR\");\r\n            makeData(res.data);\r\n        }\r\n        \r\n        const makeData = (items) => {\r\n            // items.forEach(item => console.log(item)); 데이터확인용\r\n            //reduce메서드 학습하기 이전,현재임.\r\n            const arr = items.reduce((acc, cur) => {\r\n\r\n                //currentDate에 cur의 날짜를 날짜형식으로 담는다.\r\n                const currentDate = new Date(cur.Date);\r\n                //년을 추출\r\n                const year = currentDate.getFullYear();\r\n                //월을 추출\r\n                const month = currentDate.getMonth();\r\n                //일을 추출\r\n                const date = currentDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered;\r\n                //들어있는지 안들어있는지 확인\r\n                // 이전과 현재를 비교해서 year가 일치하고 month가일치하는지??\r\n                const findItem = acc.find(a => a.year === year  && a.month === month);\r\n                //일치하지 않으며 년도가 2021년이면 배열에 넣어주기\r\n                //오브젝트 보낼때 키와벨루의 이름이 같으면 축약할 수 있음\r\n                if(!findItem && year === 2021){\r\n                    acc.push({year, month, date, confirmed, active, death });\r\n                    console.log('넣어줌');\r\n                }\r\n                //이전과 날짜를 비교하여 현재날짜가 이전날짜보다 크면\r\n                //현재데이터의 속성 값을  이전데이터의 속성값에 넣어줌\r\n                if(findItem && findItem.date < date){\r\n                    findItem.active = active;\r\n                    findItem.death = death;\r\n                    findItem.date = date;\r\n                    findItem.year = year;\r\n                    findItem.month = month;\r\n                    findItem.recovered = recovered;\r\n                    findItem.confirmed = confirmed;\r\n                }\r\n                return acc;\r\n            },[])\r\n            \r\n            //배열만들기\r\n            const labels = arr.map( a => `${a.month+1}월`);\r\n            setConfirmedData({\r\n                labels,\r\n                datasets: [{\r\n                    label: \"국내 누적 확진자\",\r\n                    backgroundColor: \"salmon\",\r\n                    fill: true,\r\n                    data: arr.map(a=>a.confirmed)\r\n                }]\r\n                });\r\n            \r\n            setQuarantinedData({\r\n            labels,\r\n            datasets: [{\r\n                label: \"월별 격리자 현황\",\r\n                borderColor: \"salmon\",\r\n                fill: false,\r\n                data: arr.map(a=>a.active)\r\n            }]\r\n            });\r\n\r\n            const last = arr[arr.length-1];\r\n            setComparedData({\r\n            labels: [\"확진자\",\"격리해제\", \"사망\"],\r\n            datasets: [{\r\n                label: \"누적 확진, 해제, 사망 비율\",\r\n                backgroundColor: [\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n                borderColor: [\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n                fill: false,\r\n                data: [last.confirmed, last.recovered, last.death]\r\n            }]\r\n            });\r\n            \r\n        }\r\n        fetchEvents();\r\n    },[]);\r\n    \r\n    return (\r\n        <section>\r\n            <h2>국내 코로나 현황</h2>\r\n            <div className=\"covid\">\r\n                <div>\r\n                    <Bar data={confirmedData}  option={\r\n                        {title: {display: true, text: \"누적 확진자 추이\", fontSize:16 }},\r\n                        {legend: {\r\n                            display: false,\r\n                            position: 'bottom',\r\n                        }}\r\n                    } />\r\n                </div>\r\n                <div>\r\n                    <Line data={quarantinedData}  option={\r\n                        {title: {display: true, text: \"월별 격리자 현황\", fontSize:16 }},\r\n                        {legend: {\r\n                            display: false,\r\n                            position: 'bottom',\r\n                        }}\r\n                    } />\r\n                </div>\r\n                <div>\r\n                    <Doughnut data={comparedData}  option={\r\n                        {title: {display: true, \r\n                                text: `누적 확진, 해제, 사망(${new Date().getMonth() + 1})`, \r\n                                fontSize:16 }},\r\n                        {legend: {\r\n                            display: false,\r\n                            position: 'bottom',\r\n                        }}\r\n                    } />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Covid;","import React from 'react';\r\nimport './Sub.css';\r\nimport Covid from '../components/Covid';\r\n\r\nclass Sub extends React.Component {\r\n    state = { \r\n      country : \"KOR\", \r\n    };   \r\n\r\n    handleClick = () => {\r\n      setTimeout(this.showMessage, 3000);\r\n    };\r\n\r\n    showMessage = () => {\r\n      alert('flolowed ' + this.state.country);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n          <header className=\"header\">\r\n            <h1>COVID-19</h1>\r\n            <select value={ this.state.country } onChange={e => this.setState({ country: e.target.value })}>\r\n                <option value=\"KOR\">국내</option>\r\n                <option value=\"WORLD\">해외</option>\r\n            </select>\r\n          </header>\r\n          <div>\r\n          {\r\n            this.state.country === \"KOR\" ? <Covid /> : <p>현재는 국내만 확인 가능합니다.</p>\r\n          }\r\n          </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sub;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nexport { default as Home } from './pages/Home';\r\nexport { default as About } from './pages/About';\r\nexport { default as Sub } from './pages/Sub';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}